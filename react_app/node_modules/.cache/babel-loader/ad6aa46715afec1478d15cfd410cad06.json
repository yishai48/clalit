{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E8\\u05E7\\u05D5\\u05D1\\u05E1\\u05E7\\u05D9\\\\Desktop\\\\react_app\\\\src\\\\Signup.js\";\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { useForm } from \"react-hook-form\";\nimport { Link } from 'react-router-dom';\nimport Login from './Login';\nexport default function Signup() {\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState();\n  const [email, setEmail] = useState();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // const validateEmail = (e) => {\n  //     const tempemail= e.target.value\n  //     setEmailError(tempemail)\n  //     const regax =/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  //      if(email===\"\")\n  //      setError(\"empty email\")\n  //     if(regax.test(email)===false)\n  //     setError(\"valid email\")\n  //   }\n\n  const onSubmit = data => {\n    alert(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Please Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"First Name\",\n    onChange: e => setUserName(e.target.value)\n  }, register(\"firstName\", {\n    required: true,\n    maxLength: 10\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-error\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }\n  }, \"Please check the First Name\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value)\n  }, register(\"email\", {\n    required: true,\n    pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-error\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }\n  }, \"Please check the Email\")), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 'bold',\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, Error), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value)\n  }, register(\"password\", {\n    required: true,\n    pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-error\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 46\n    }\n  }, \"Please check the Password\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, \"have you register alredy?\"))));\n}","map":{"version":3,"sources":["C:/Users/מרקובסקי/Desktop/react_app/src/Signup.js"],"names":["React","useState","useForm","Link","Login","Signup","username","setUserName","password","setPassword","email","setEmail","register","handleSubmit","formState","errors","onSubmit","data","alert","e","target","value","required","maxLength","firstName","color","pattern","fontWeight","Error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from 'react-router-dom';\r\nimport Login from './Login'\r\n\r\nexport default function Signup() {\r\n\r\n  const [username, setUserName] = useState('');\r\n  const [password, setPassword] = useState();\r\n  const [email, setEmail] = useState();\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    // const validateEmail = (e) => {\r\n    //     const tempemail= e.target.value\r\n    //     setEmailError(tempemail)\r\n    //     const regax =/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    //      if(email===\"\")\r\n    //      setError(\"empty email\")\r\n    //     if(regax.test(email)===false)\r\n    //     setError(\"valid email\")\r\n        \r\n      \r\n    //   }\r\n      const onSubmit=(data)=>{\r\n      alert(data)\r\n      }\r\n    \r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Please Log In</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\"\r\n          placeholder='First Name'\r\n          onChange={e => setUserName(e.target.value)} \r\n          {...register(\"firstName\", { required: true, maxLength: 10 })}\r\n          />\r\n          {errors.firstName && <p className=\"text-error\" style={{color: \"red\"}} >Please check the First Name</p>}\r\n\r\n        </label>\r\n        <label>\r\n          <p>Email</p>\r\n          <input type=\"text\"\r\n          placeholder='Email'\r\n          onChange={e => setEmail(e.target.value)}       \r\n          {...register(\"email\",\r\n                            {\r\n                                required: true,\r\n                                pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                            })}\r\n          />\r\n          {errors.email && <p className=\"text-error\" style={{color: \"red\"}}>Please check the Email</p>}\r\n        </label>\r\n        <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{Error}</span>\r\n        <label>\r\n          <p>Password</p>\r\n          <input type=\"password\" \r\n         placeholder=\"Password\"\r\n         onChange={e => setPassword(e.target.value)}      \r\n          {...register(\"password\", {\r\n                            required: true,\r\n                            pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/\r\n                        })}\r\n                        />\r\n                         {errors.password && <p className=\"text-error\" style={{color: \"red\"}}>Please check the Password</p>}\r\n        </label>\r\n        <div>    \r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n        <div className=\"link\">\r\n        \r\n         <Link to='/Login'>have you register alredy?</Link>\r\n        \r\n         </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}