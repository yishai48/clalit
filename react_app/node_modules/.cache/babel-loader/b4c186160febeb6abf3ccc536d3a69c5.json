{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E8\\u05E7\\u05D5\\u05D1\\u05E1\\u05E7\\u05D9\\\\Desktop\\\\react_app\\\\src\\\\Signup.js\";\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { useForm } from \"react-hook-form\";\nimport { Link } from 'react-router-dom';\nimport Login from './Login';\nexport default function Signup() {\n  const [username, setUserName] = useState('');\n  const [usererror, setUerror] = useState('');\n  const [emailerror, setEmailerror] = useState('');\n  const [password, setPassword] = useState();\n  const [email, setEmail] = useState(); //const { register, handleSubmit, formState: { errors } } = useForm();\n  // const validateEmail = (e) => {\n  //     const tempemail= e.target.value\n  //     setEmailError(tempemail)\n  //     const regax =/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  //      if(email===\"\")\n  //      setError(\"empty email\")\n  //     if(regax.test(email)===false)\n  //     setError(\"valid email\")\n  //   }\n\n  const onSubmit = async () => {\n    const user = {\n      username,\n      email,\n      password\n    };\n    const regex_username = /^[[A-Z]|[a-z]]/;\n    const regex_email = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let isvalidU = regex_username.test(username);\n    let isvalidE = regex_email.test(email);\n\n    if (username === \"\" || !isvalidU) {\n      setUerror(\"invalid username \");\n    }\n\n    if (email === \"\" || !isvalidE) {\n      setEmailerror(\"invalid email \");\n    } else {\n      try {\n        await fetch('http://localhost:8080/api/auth/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(user)\n        });\n        alert(\"success signup!\" + \"now login\");\n      } catch (error) {\n        alert(\"signup fault\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Please Log In\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"First Name\",\n    onChange: e => setUserName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 'bold',\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, usererror)), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 'bold',\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, emailerror)), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"  Register\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, \"have you register alredy?\")));\n}","map":{"version":3,"sources":["C:/Users/מרקובסקי/Desktop/react_app/src/Signup.js"],"names":["React","useState","useForm","Link","Login","Signup","username","setUserName","usererror","setUerror","emailerror","setEmailerror","password","setPassword","email","setEmail","onSubmit","user","regex_username","regex_email","isvalidU","test","isvalidE","fetch","method","headers","body","JSON","stringify","alert","error","e","target","value","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from 'react-router-dom';\r\nimport Login from './Login'\r\n\r\nexport default function Signup() {\r\n\r\n  const [username, setUserName] = useState('');\r\n  const [usererror, setUerror] = useState('');\r\n  const [emailerror, setEmailerror] = useState('');\r\n  const [password, setPassword] = useState();\r\n  const [email, setEmail] = useState();\r\n    //const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    // const validateEmail = (e) => {\r\n    //     const tempemail= e.target.value\r\n    //     setEmailError(tempemail)\r\n    //     const regax =/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    //      if(email===\"\")\r\n    //      setError(\"empty email\")\r\n    //     if(regax.test(email)===false)\r\n    //     setError(\"valid email\")\r\n        \r\n      \r\n    //   }\r\n      const onSubmit=async()=>{\r\nconst user={username,email,password}\r\nconst regex_username=/^[[A-Z]|[a-z]]/\r\nconst regex_email=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nlet isvalidU=regex_username.test(username)\r\nlet isvalidE=regex_email.test(email)\r\nif(username===\"\"||!isvalidU){\r\n  setUerror(\"invalid username \")\r\n}\r\nif(email===\"\"||!isvalidE){\r\n  setEmailerror(\"invalid email \")\r\n}\r\nelse{\r\ntry{\r\n  await fetch('http://localhost:8080/api/auth/signup', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n  alert(\"success signup!\"+\r\n        \"now login\")\r\n}\r\ncatch(error){\r\nalert(\"signup fault\")\r\n      }\r\n    } \r\n      }\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Please Log In</h1>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\"\r\n          placeholder='First Name'\r\n          onChange={e => setUserName(e.target.value)} \r\n          />\r\n          <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{usererror}</span>\r\n        </label>\r\n        <label>\r\n          <p>Email</p>\r\n          <input type=\"text\"\r\n          placeholder='Email'\r\n          onChange={e => setEmail(e.target.value)}       \r\n          />\r\n          <span style={{\r\n          fontWeight: 'bold',\r\n          color: 'red',\r\n        }}>{emailerror}</span>\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input type=\"password\" \r\n         placeholder=\"Password\"\r\n         onChange={e => setPassword(e.target.value)}      \r\n     \r\n                        />\r\n                                </label>\r\n        \r\n        <button onClick={onSubmit}>  Register\r\n        </button>\r\n        \r\n        <div className=\"link\">\r\n        \r\n         <Link to='/Login'>have you register alredy?</Link>\r\n        \r\n         </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}